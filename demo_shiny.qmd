---
title: "shiny demo"
format: html
server: shiny
---


```{r}
#| context: setup
#| include: false


# load libraries and server functions
if(!require("pacman")){install.packages("pacman")}
pacman::p_load(dplyr,
               leaflet,
               lubridate,
               lutz,
               sf,
               shiny,
               tidygeocoder)



# change max file upload size
# before starting shiny
# looks like 20 MB should be enough
options(shiny.maxRequestSize = 20 * 1024^2)



# load all the server functions in the R folder
for(file in list.files("R", full.names = TRUE)){
  source(file)
}


```

```{r}
# define the UI


  
  # include CSS
  tags$link(rel = "stylesheet", type = "text/css", href = "www/css/styles.css")
  

  titlePanel("Upload a gpx file to get started!")
  gpx_upload_UI("gpx_upload")
  activity_header_UI("activity_header")
  summary_map_UI("summary_map")
  stats_table_UI("stats_table")
  elevation_plot_UI("elevation_plot")
  aknowledgements_UI("aknowledgements")
  



```

```{r}
#| context: server

# define the server


 gpx_file <- gpx_upload_server("gpx_upload")
  activity_tracks <- tracks_server("tracks_process", gpx_file)
  activity_track_points <- track_points_server("track_points_process", gpx_file)
  activity_header_server("activity_header", activity_tracks, activity_track_points)
  summary_map_server("summary_map", activity_tracks)
  stats_table_server("stats_table", activity_tracks, activity_track_points)
  elevation_plot_server("elevation_plot", gpx_file)
  aknowledgements_server("aknowledgements", gpx_file)




```

